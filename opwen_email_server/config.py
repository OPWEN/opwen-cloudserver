from opwen_email_server.utils.env import Env

env = Env()

STORAGE_PROVIDER = env('LOKOLE_STORAGE_PROVIDER', 'AZURE_BLOBS')

BLOBS_ACCOUNT = env('LOKOLE_EMAIL_SERVER_AZURE_BLOBS_NAME')
BLOBS_KEY = env('LOKOLE_EMAIL_SERVER_AZURE_BLOBS_KEY')
BLOBS_HOST = env('LOKOLE_EMAIL_SERVER_AZURE_BLOBS_HOST')
BLOBS_SECURE = env.boolean('LOKOLE_EMAIL_SERVER_AZURE_BLOBS_SECURE',
                           default=True)

TABLES_ACCOUNT = env('LOKOLE_EMAIL_SERVER_AZURE_TABLES_NAME')
TABLES_KEY = env('LOKOLE_EMAIL_SERVER_AZURE_TABLES_KEY')
TABLES_HOST = env('LOKOLE_EMAIL_SERVER_AZURE_TABLES_HOST')
TABLES_SECURE = env.boolean('LOKOLE_EMAIL_SERVER_AZURE_TABLES_SECURE',
                            default=True)

CLIENT_STORAGE_ACCOUNT = env('LOKOLE_CLIENT_AZURE_STORAGE_NAME')
CLIENT_STORAGE_KEY = env('LOKOLE_CLIENT_AZURE_STORAGE_KEY')
CLIENT_STORAGE_HOST = env('LOKOLE_CLIENT_AZURE_STORAGE_HOST')
CLIENT_STORAGE_SECURE = env.boolean('LOKOLE_CLIENT_AZURE_STORAGE_SECURE',
                                    default=True)

SENDGRID_KEY = env('LOKOLE_SENDGRID_KEY')
CLOUDFLARE_USER = env('LOKOLE_CLOUDFLARE_USER')
CLOUDFLARE_KEY = env('LOKOLE_CLOUDFLARE_KEY')
CLOUDFLARE_ZONE = env('LOKOLE_CLOUDFLARE_ZONE')

LOG_LEVEL = env('LOKOLE_LOG_LEVEL', 'INFO')

APPINSIGHTS_KEY = env('LOKOLE_EMAIL_SERVER_APPINSIGHTS_KEY')

MAX_WIDTH_IMAGES = env.integer('MAX_WIDTH_EMAIL_IMAGES', 200)
MAX_HEIGHT_IMAGES = env.integer('MAX_HEIGHT_EMAIL_IMAGES', 200)

if env('QUEUE_BROKER_SCHEME') == 'azureservicebus':
    QUEUE_BROKER = 'azureservicebus://{username}:{password}@{host}'.format(
        username=env.urlpart('LOKOLE_EMAIL_SERVER_QUEUES_SAS_NAME'),
        password=env.urlpart('LOKOLE_EMAIL_SERVER_QUEUES_SAS_KEY'),
        host=env.urlpart('LOKOLE_EMAIL_SERVER_QUEUES_NAMESPACE'))
else:
    QUEUE_BROKER = env('QUEUE_BROKER_URL')
