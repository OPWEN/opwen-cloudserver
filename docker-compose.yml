version: '3.4'

x-shared-app-environment:
  &shared-app-environment
  LOKOLE_QUEUE_BROKER_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq
  LOKOLE_QUEUE_BROKER_SCHEME: ${LOKOLE_QUEUE_BROKER_SCHEME}
  LOKOLE_EMAIL_SERVER_QUEUES_SAS_NAME: ${LOKOLE_EMAIL_SERVER_QUEUES_SAS_NAME}
  LOKOLE_EMAIL_SERVER_QUEUES_SAS_KEY: ${LOKOLE_EMAIL_SERVER_QUEUES_SAS_KEY}
  LOKOLE_EMAIL_SERVER_QUEUES_NAMESPACE: ${LOKOLE_EMAIL_SERVER_QUEUES_NAMESPACE}
  LOKOLE_LOG_LEVEL: ${LOKOLE_LOG_LEVEL}
  LOKOLE_EMAIL_SERVER_APPINSIGHTS_KEY: ${APPINSIGHTS_INSTRUMENTATIONKEY}
  LOKOLE_EMAIL_SERVER_APPINSIGHTS_HOST: http://appinsights

  LOKOLE_STORAGE_PROVIDER: AZURE_BLOBS

  LOKOLE_EMAIL_SERVER_AZURE_BLOBS_NAME: ${AZURITE_ACCOUNT}
  LOKOLE_EMAIL_SERVER_AZURE_BLOBS_KEY: ${AZURITE_KEY}
  LOKOLE_EMAIL_SERVER_AZURE_BLOBS_HOST: ${AZURITE_HOST}
  LOKOLE_EMAIL_SERVER_AZURE_BLOBS_SECURE: ${AZURITE_SECURE}

  LOKOLE_EMAIL_SERVER_AZURE_TABLES_NAME: ${AZURITE_ACCOUNT}
  LOKOLE_EMAIL_SERVER_AZURE_TABLES_KEY: ${AZURITE_KEY}
  LOKOLE_EMAIL_SERVER_AZURE_TABLES_HOST: ${AZURITE_HOST}
  LOKOLE_EMAIL_SERVER_AZURE_TABLES_SECURE: ${AZURITE_SECURE}

  LOKOLE_CLIENT_AZURE_STORAGE_NAME: ${AZURITE_ACCOUNT}
  LOKOLE_CLIENT_AZURE_STORAGE_KEY: ${AZURITE_KEY}
  LOKOLE_CLIENT_AZURE_STORAGE_HOST: ${AZURITE_HOST}
  LOKOLE_CLIENT_AZURE_STORAGE_SECURE: ${AZURITE_SECURE}

x-shared-app-build:
  &shared-app-build
  image: ${DOCKER_REPO}/opwenserver_app:${BUILD_TAG}
  build:
    context: .
    dockerfile: docker/app/Dockerfile
    target: ${BUILD_TARGET}
    args:
      LOKOLE_SENDGRID_KEY: ${LOKOLE_SENDGRID_KEY}

services:

  nginx:
    image: ${DOCKER_REPO}/opwenserver_nginx:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - ${APP_PORT}:8888
    environment:
      DNS_RESOLVER: 127.0.0.11
      HOSTNAME_CLIENT_METRICS: api:8080
      HOSTNAME_CLIENT_READ: api:8080
      HOSTNAME_CLIENT_WRITE: api:8080
      HOSTNAME_EMAIL_RECEIVE: api:8080
      HOSTNAME_CLIENT_REGISTER: api:8080
    depends_on:
      - api

  api:
    <<: *shared-app-build
    command: ["/app/run-gunicorn.sh"]
    environment:
      <<: *shared-app-environment
      CONNEXION_SPEC: dir:/app/opwen_email_server/swagger
      SERVER_WORKERS: ${SERVER_WORKERS}
      TESTING_UI: "True"
      REGISTRATION_USERNAME: admin
      REGISTRATION_PASSWORD: password
    depends_on:
      - appinsights
      - azurite

  worker:
    <<: *shared-app-build
    command: ["/app/run-celery.sh"]
    environment:
      <<: *shared-app-environment
      CELERY_QUEUE_NAMES: all
      QUEUE_WORKERS: ${QUEUE_WORKERS}
    depends_on:
      - appinsights
      - azurite
      - rabbitmq

  setup:
    image: ${DOCKER_REPO}/opwenserver_setup:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/setup/Dockerfile
    command: echo skipped

  integtest:
    image: ${DOCKER_REPO}/opwenserver_integtest:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/integtest/Dockerfile
    command: echo skipped
    environment:
      REGISTRATION_CREDENTIALS: ${REGISTRATION_CREDENTIALS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: rabbitmq:management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  appinsights:
    image: cwolff/appinsights-on-premises:0.1.2-postgres
    depends_on:
      - postgres
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      APPINSIGHTS_INSTRUMENTATIONKEY: "${APPINSIGHTS_INSTRUMENTATIONKEY}"
    ports:
      - ${APPINSIGHTS_PORT}:80

  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - ${POSTGRES_PORT}:5432

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    ports:
      - ${AZURITE_PORT}:10000

  flower:
    image: mher/flower:latest
    depends_on:
      - rabbitmq
    command: ["--address=0.0.0.0", "--port=5555", "--broker=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq"]
    ports:
      - ${FLOWER_PORT}:5555

  pgweb:
    image: sosedoff/pgweb:latest
    depends_on:
      - postgres
    command: ["/usr/bin/pgweb", "--bind=0.0.0.0", "--listen=8000", "--url=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"]
    ports:
      - ${PGWEB_PORT}:8000

  cloudbrowser:
    image: cwolff/django-cloud-browser:latest
    depends_on:
      - azurite
    environment:
      CLOUD_BROWSER_DATASTORE: "ApacheLibcloud"
      CLOUD_BROWSER_APACHE_LIBCLOUD_PROVIDER: "AZURE_BLOBS"
      CLOUD_BROWSER_APACHE_LIBCLOUD_ACCOUNT: "${AZURITE_ACCOUNT}"
      CLOUD_BROWSER_APACHE_LIBCLOUD_SECRET_KEY: "${AZURITE_KEY}"
      CLOUD_BROWSER_APACHE_LIBCLOUD_HOST: "azurite"
      CLOUD_BROWSER_APACHE_LIBCLOUD_PORT: "10000"
      CLOUD_BROWSER_APACHE_LIBCLOUD_SECURE: "${AZURITE_SECURE}"
    ports:
      - ${CLOUDBROWSER_PORT}:8000
