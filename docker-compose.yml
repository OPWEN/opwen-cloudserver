version: '3.4'

x-shared-environment:
  &shared-environment
  CELERY_BROKER_URL: pyamqp://guest:guest@rabbitmq
  LOKOLE_LOG_LEVEL: ${LOKOLE_LOG_LEVEL}
  LOKOLE_STORAGE_PROVIDER: "LOCAL"
  LOKOLE_EMAIL_SERVER_AZURE_BLOBS_NAME: "/data/server-blobs"
  LOKOLE_EMAIL_SERVER_AZURE_TABLES_NAME: "/data/server-tables"
  LOKOLE_CLIENT_AZURE_STORAGE_NAME: "/data/client-blobs"

services:

  nginx:
    image: ${DOCKER_REPO}/opwenserver_nginx:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - ${APP_PORT}:80
    environment:
      DNS_RESOLVER: 127.0.0.11
      HOSTNAME_CLIENT_READ: api
      HOSTNAME_CLIENT_WRITE: api
      HOSTNAME_EMAIL_RECEIVE: api
    depends_on:
      - api

  api:
    image: ${DOCKER_REPO}/opwenserver_api:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/api/Dockerfile
      args:
        USE_DEVTOOLS: "${USE_DEVTOOLS}"
    environment:
      << : *shared-environment
      CONNEXION_SPEC: /app/opwen_email_server/static/email-receive-spec.yaml,/app/opwen_email_server/static/client-read-spec.yaml,/app/opwen_email_server/static/client-write-spec.yaml,/app/opwen_email_server/static/healthcheck-spec.yaml
      CONNEXION_SERVER: flask
      GUNICORN_WORKERS: ${GUNICORN_WORKERS}
      TESTING_UI: "True"

  worker:
    image: ${DOCKER_REPO}/opwenserver_worker:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
      args:
        USE_DEVTOOLS: "${USE_DEVTOOLS}"
    environment:
      << : *shared-environment
      CELERY_WORKERS: ${CELERY_WORKERS}

  rabbitmq:
    image: rabbitmq:3.7.8-management
