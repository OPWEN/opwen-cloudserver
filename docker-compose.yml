version: '3.4'

x-shared-app-environment:
  &shared-app-environment
  QUEUE_BROKER_URL: pyamqp://guest:guest@rabbitmq
  LOKOLE_LOG_LEVEL: ${LOKOLE_LOG_LEVEL}
  LOKOLE_STORAGE_PROVIDER: "LOCAL"
  LOKOLE_EMAIL_SERVER_AZURE_BLOBS_NAME: "/data/server-blobs"
  LOKOLE_EMAIL_SERVER_AZURE_TABLES_NAME: "/data/server-tables"
  LOKOLE_CLIENT_AZURE_STORAGE_NAME: "/data/client-blobs"

x-shared-app-build:
  &shared-app-build
  image: ${DOCKER_REPO}/opwenserver_app:${BUILD_TAG}
  build:
    context: .
    dockerfile: docker/app/Dockerfile
    args:
      USE_DEVTOOLS: "${USE_DEVTOOLS}"

services:

  nginx:
    image: ${DOCKER_REPO}/opwenserver_nginx:${BUILD_TAG}
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - ${APP_PORT}:80
    environment:
      DNS_RESOLVER: 127.0.0.11
      HOSTNAME_CLIENT_READ: api
      HOSTNAME_CLIENT_WRITE: api
      HOSTNAME_EMAIL_RECEIVE: api
      HOSTNAME_CLIENT_REGISTER: api
      REGISTRATION_USERNAME: admin
      REGISTRATION_PASSWORD: password
    depends_on:
      - api

  api:
    << : *shared-app-build
    command: ["/app/run-gunicorn.sh"]
    environment:
      << : *shared-app-environment
      CONNEXION_SPEC: /app/opwen_email_server/static/email-receive-spec.yaml,/app/opwen_email_server/static/client-read-spec.yaml,/app/opwen_email_server/static/client-write-spec.yaml,/app/opwen_email_server/static/client-register-spec.yaml,/app/opwen_email_server/static/healthcheck-spec.yaml
      CONNEXION_SERVER: flask
      SERVER_WORKERS: ${SERVER_WORKERS}
      TESTING_UI: "True"
    volumes:
      - ./volumes/data:/data

  worker:
    << : *shared-app-build
    command: ["/app/run-celery.sh"]
    environment:
      << : *shared-app-environment
      CELERY_QUEUE_NAMES: written_store,inbound_store,send
      QUEUE_WORKERS: ${QUEUE_WORKERS}
    depends_on:
      - rabbitmq
    volumes:
      - ./volumes/data:/data

  rabbitmq:
    image: rabbitmq:3.7.8-management
